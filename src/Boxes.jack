class Boxes{

    field int position;

    constructor Boxes new(int location){
        let position = location;
        do drawBoxes();
        return this;
    }

    method void drawBoxes(){
        var int i, j, location;
        let i = 0; 
        let location = position;
        while (~(i = 12))
        {
            do drawBox0(location+i);
            do drawBox1(location+i+1);
            do drawBox2(location+i+2);
            do drawBox3(location+i+3);
            let i = i + 4;
        }

        let i = 0;
        let location = position + 512;

        while (~(i = 12))
        {
            do drawBox3(location+i);
            do drawBox2(location+i+1);
            do drawBox1(location+i+2);
            do drawBox0(location+i+3);
            let i = i + 4;
        } 
        return;
    }

    method void drawBox0(int location) {
        var int memAddress; 
        let memAddress = 16384+location;
        do Memory.poke(memAddress, -1);
        do Memory.poke(memAddress +32, -1);
        do Memory.poke(memAddress +64, -16381);
        do Memory.poke(memAddress +96, -16381);
        do Memory.poke(memAddress +128, -16189);
        do Memory.poke(memAddress +160, -15933);
        do Memory.poke(memAddress +192, -16133);
        do Memory.poke(memAddress +224, -16269);
        do Memory.poke(memAddress +256, -16381);
        do Memory.poke(memAddress +288, -5461);
        do Memory.poke(memAddress +320, -1);
        do Memory.poke(memAddress +352, -1);
        do Memory.poke(memAddress +384, -13653);
        do Memory.poke(memAddress +416, -12969);
        do Memory.poke(memAddress +448, -1);
        do Memory.poke(memAddress +480, -1);
        return;
    }

    method void drawBox1(int location) {
        var int memAddress; 
        let memAddress = 16384+location;
        do Memory.poke(memAddress, -1);
        do Memory.poke(memAddress +32, -1);
        do Memory.poke(memAddress +64, -2209);
        do Memory.poke(memAddress +96, -2293);
        do Memory.poke(memAddress +128, -14717);
        do Memory.poke(memAddress +160, -509);
        do Memory.poke(memAddress +192, -10717);
        do Memory.poke(memAddress +224, -10749);
        do Memory.poke(memAddress +256, -4573);
        do Memory.poke(memAddress +288, -509);
        do Memory.poke(memAddress +320, -477);
        do Memory.poke(memAddress +352, -10637);
        do Memory.poke(memAddress +384, -14733);
        do Memory.poke(memAddress +416, -8701);
        do Memory.poke(memAddress +448, -1);
        do Memory.poke(memAddress +480, -1);
        return;
    }

    method void drawBox2(int location) {
        var int memAddress; 
        let memAddress = 16384+location;
        do Memory.poke(memAddress, -1);
        do Memory.poke(memAddress +32, -1);
        do Memory.poke(memAddress +64, -16381);
        do Memory.poke(memAddress +96, -13389);
        do Memory.poke(memAddress +128, -16381);
        do Memory.poke(memAddress +160, -15325);
        do Memory.poke(memAddress +192, -14749);
        do Memory.poke(memAddress +224, -14365);
        do Memory.poke(memAddress +256, -14941);
        do Memory.poke(memAddress +288, -14365);
        do Memory.poke(memAddress +320, -14365);
        do Memory.poke(memAddress +352, -15421);
        do Memory.poke(memAddress +384, -14365);
        do Memory.poke(memAddress +416, -12301);
        do Memory.poke(memAddress +448, -1);
        do Memory.poke(memAddress +480, -1);
        return;
    }

    method void drawBox3(int location) {
        var int memAddress; 
        let memAddress = 16384+location;
        do Memory.poke(memAddress, -1);
        do Memory.poke(memAddress +32, -1);
        do Memory.poke(memAddress +64, -4065);
        do Memory.poke(memAddress +96, -8177);
        do Memory.poke(memAddress +128, -15353);
        do Memory.poke(memAddress +160, -8173);
        do Memory.poke(memAddress +192, -4093);
        do Memory.poke(memAddress +224, -1405);
        do Memory.poke(memAddress +256, -253);
        do Memory.poke(memAddress +288, -4093);
        do Memory.poke(memAddress +320, -8189);
        do Memory.poke(memAddress +352, -16377);
        do Memory.poke(memAddress +384, -8177);
        do Memory.poke(memAddress +416, -4065);
        do Memory.poke(memAddress +448, -1);
        do Memory.poke(memAddress +480, -1);
        return;
    }

    method void dispose(){
        do Memory.deAlloc(this);
        return;
    }
}