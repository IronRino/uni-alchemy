function Obstacle.new 0
push constant 6
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 1
push this 1
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 4357
pop this 0
label IF_FALSE0
push this 1
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 4378
pop this 0
label IF_FALSE1
push this 1
push constant 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 5638
pop this 0
label IF_FALSE2
push this 1
push constant 4
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 5657
pop this 0
label IF_FALSE3
push argument 2
pop this 5
push pointer 0
call Obstacle.printObstacle 1
pop temp 0
push argument 1
pop this 2
push argument 1
pop this 3
push constant 0
pop this 4
push pointer 0
return
function Obstacle.getRoadPosition 0
push argument 0
pop pointer 0
push this 4
return
function Obstacle.tryMove 0
push argument 0
pop pointer 0
push this 2
push constant 1
sub
pop this 2
push this 2
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 3
pop this 2
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function Obstacle.move 0
push argument 0
pop pointer 0
push this 4
push constant 1
add
pop this 4
push this 4
push constant 7
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
push constant 0
call Output.moveCursor 2
pop temp 0
push constant 4
call String.new 1
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push constant 0
push constant 0
call Output.moveCursor 2
pop temp 0
push argument 1
push this 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 5
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 2
push constant 10
call Score.reduceScore 2
pop temp 0
goto IF_END2
label IF_FALSE2
push argument 2
push constant 20
call Score.increaseScore 2
pop temp 0
label IF_END2
push pointer 0
call Obstacle.clearObstacle 1
pop temp 0
push constant 0
return
label IF_FALSE1
push this 5
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push argument 2
push constant 10
call Score.increaseScore 2
pop temp 0
label IF_FALSE3
push pointer 0
call Obstacle.clearObstacle 1
pop temp 0
push constant 0
return
label IF_FALSE0
push pointer 0
call Obstacle.clearObstacle 1
pop temp 0
push this 1
push constant 1
eq
push this 1
push constant 3
eq
or
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 0
push constant 1
add
pop this 0
label IF_FALSE4
push this 1
push constant 2
eq
push this 1
push constant 4
eq
or
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push this 0
push constant 1
sub
pop this 0
label IF_FALSE5
push pointer 0
call Obstacle.printObstacle 1
pop temp 0
push constant 0
return
function Obstacle.printObstacle 0
push argument 0
pop pointer 0
push this 5
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
call Drawing.drawNandik 1
pop temp 0
goto IF_END0
label IF_FALSE0
push this 0
call Drawing.drawAmogus 1
pop temp 0
label IF_END0
push constant 0
return
function Obstacle.clearObstacle 0
push argument 0
pop pointer 0
push this 5
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
call Clearing.clearNandik 1
pop temp 0
goto IF_END0
label IF_FALSE0
push this 0
call Clearing.clearAmogus 1
pop temp 0
label IF_END0
push constant 0
return
function Obstacle.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
